# Prometheus server configuration
server:
  # Enable persistent volume
  persistentVolume:
    enabled: true
    storageClass: "gp2"  # ‚Üê Use your existing storage class
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  
  # Resource limits
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  
  # Retention period
  retention: "7d"
  
  # Global scrape settings
  global:
    scrape_interval: 15s
    scrape_timeout: 10s
    evaluation_interval: 15s

# Custom scrape config for nginx-test pods
extraScrapeConfigs: |
  - job_name: 'nginx-test-pods'
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - default
    relabel_configs:
    # Keep only pods with app=nginx-test label
    - source_labels: [__meta_kubernetes_pod_label_app]
      action: keep
      regex: nginx-test
    # Keep only if prometheus.io/scrape annotation is true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    # Get port from annotation
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
      action: replace
      regex: (\d+);((([0-9]+?)(\.|$)){4})
      replacement: $2:$1
      target_label: __address__
    # Get metrics path
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    # Add pod labels as Prometheus labels
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name

# Disable components we don't need
alertmanager:
  enabled: false

kube-state-metrics:
  enabled: true

prometheus-node-exporter:
  enabled: true

prometheus-pushgateway:
  enabled: false
