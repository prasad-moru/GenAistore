---
# ===================================================================
# FILE: helm-charts/rabbitmq/templates/statefulset.yaml
# ===================================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rabbitmq.fullname" . }}
  labels:
    {{- include "rabbitmq.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "rabbitmq.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "rabbitmq.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rabbitmq.selectorLabels" . | nindent 8 }}
      annotations:
        {{- if .Values.vault.enabled }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: {{ .Values.vault.role | quote }}
        vault.hashicorp.com/agent-inject-secret-credentials.env: {{ .Values.vault.secrets.credentials.path | quote }}
        vault.hashicorp.com/agent-inject-template-credentials.env: |
          {{- .Values.vault.secrets.credentials.template | nindent 10 }}
        {{- end }}
        {{- if .Values.metrics.enabled }}
        {{- toYaml .Values.metrics.annotations | nindent 8 }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "rabbitmq.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: rabbitmq
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.vault.enabled }}
        command: ["/bin/sh"]
        args:
          - -c
          - |
            source /vault/secrets/credentials.env
            docker-entrypoint.sh rabbitmq-server
        {{- end }}
        ports:
        - name: amqp
          containerPort: {{ .Values.service.ports.amqp.targetPort }}
          protocol: TCP
        - name: management
          containerPort: {{ .Values.service.ports.management.targetPort }}
          protocol: TCP
        - name: prometheus
          containerPort: {{ .Values.service.ports.prometheus.targetPort }}
          protocol: TCP
        env:
        {{- if not .Values.vault.enabled }}
        - name: RABBITMQ_DEFAULT_USER
          value: {{ .Values.auth.username | quote }}
        - name: RABBITMQ_DEFAULT_PASS
          value: {{ .Values.auth.password | quote }}
        {{- end }}
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - -q
            - ping
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - -q
            - check_running
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 20
          failureThreshold: 3
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/rabbitmq/enabled_plugins
          subPath: enabled_plugins
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: /var/lib/rabbitmq
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "rabbitmq.fullname" . }}-enabled-plugins
          items:
          - key: enabled_plugins
            path: enabled_plugins
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {{- include "rabbitmq.labels" . | nindent 8 }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode }}
      storageClassName: {{ .Values.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- end }}