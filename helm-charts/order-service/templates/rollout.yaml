apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "order-service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "order-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "order-service.selectorLabels" . | nindent 6 }}
  strategy:
    {{- if eq .Values.strategy.type "canary" }}
    canary:
      canaryService: {{ include "order-service.fullname" . }}-canary
      stableService: {{ include "order-service.fullname" . }}
      {{- if .Values.istio.enabled }}
      trafficRouting:
        istio:
          virtualService:
            name: {{ include "order-service.fullname" . }}
            routes:
              - primary
      {{- end }}
      steps:
        {{- toYaml .Values.strategy.canary.steps | nindent 8 }}
    {{- end }}
  template:
    metadata:
      labels:
        {{- include "order-service.selectorLabels" . | nindent 8 }}
        {{- include "order-service.datadogLabels" . | nindent 8 }}
        version: {{ .Values.image.tag | quote }}
      annotations:
        {{- if .Values.vault.enabled }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: {{ .Values.vault.role | quote }}
        vault.hashicorp.com/agent-inject-secret-rabbitmq.env: {{ .Values.vault.secrets.rabbitmq.path | quote }}
        vault.hashicorp.com/agent-inject-template-rabbitmq.env: |
          {{`{{- with secret "kv/data/order-service" -}}
          export ORDER_QUEUE_USERNAME="{{ .Data.data.rabbitmq_username }}"
          export ORDER_QUEUE_PASSWORD="{{ .Data.data.rabbitmq_password }}"
          {{- end -}}`}}
        {{- end }}
        {{- include "order-service.datadogAnnotations" . | nindent 8 }}
        {{- if .Values.istio.enabled }}
        sidecar.istio.io/inject: "true"
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "order-service.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.vault.enabled }}
        command: ["/bin/sh"]
        args:
          - -c
          - |
            source /vault/secrets/rabbitmq.env
            npm start
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        env:
        {{- if .Values.datadog.enabled }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        {{- end }}
        {{- with .Values.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.probes.startup }}
        startupProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.probes.readiness }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.probes.liveness }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}